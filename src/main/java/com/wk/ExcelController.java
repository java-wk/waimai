package com.wk;import com.alibaba.excel.ExcelWriter;import com.alibaba.excel.metadata.Sheet;import com.alibaba.excel.metadata.Table;import com.alibaba.excel.support.ExcelTypeEnum;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import org.apache.commons.lang3.StringUtils;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RestController;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.File;import java.io.IOException;import java.text.SimpleDateFormat;import java.util.*;@RestControllerpublic class ExcelController {    @RequestMapping(value = "/a", method = RequestMethod.GET)    public void cooperation(HttpServletRequest request, HttpServletResponse response, String name,String path)            throws IOException {        ServletOutputStream out = response.getOutputStream();        String fileName = name.replaceAll(".json", "");        response.setContentType("multipart/form-data");        response.setCharacterEncoding("utf-8");        String basename = new String(fileName.getBytes("gb2312"),"ISO8859-1");//        response.setHeader("Content-disposition", "attachment;filename = basename .xls");        response.setHeader("Content-disposition", "attachment;filename=" + basename + ".xlsx");        ExcelWriter writer = new ExcelWriter(out, ExcelTypeEnum.XLSX, true);        Sheet sheet = new Sheet(1, 0);        List<List<String>> head = new ArrayList<List<String>>();        List<String> headCoulumn1 = new ArrayList<String>();        List<String> headCoulumn2 = new ArrayList<String>();        List<String> headCoulumn3 = new ArrayList<String>();        List<String> headCoulumn4 = new ArrayList<String>();        List<String> headCoulumn5 = new ArrayList<String>();        List<String> headCoulumn6 = new ArrayList<String>();//        List<String> headCoulumn7 = new ArrayList<String>();        List<String> headCoulumn8 = new ArrayList<String>();        headCoulumn1.add("店家名称");        headCoulumn2.add("店铺评分");        headCoulumn3.add("月售");        headCoulumn4.add("人均");        headCoulumn5.add("起送价");        headCoulumn6.add("配送费");//        headCoulumn7.add("配送费优惠");        headCoulumn8.add("价格带");        head.add(headCoulumn1);        head.add(headCoulumn2);        head.add(headCoulumn3);        head.add(headCoulumn4);        head.add(headCoulumn5);        head.add(headCoulumn6);//        head.add(headCoulumn7);        head.add(headCoulumn8);        Table table = new Table(1);        table.setHead(head);        sheet.setSheetName(fileName);//        writer.write0(getListString(), sheet, table);        writer.write0(getJson(path), sheet, table);        writer.finish();        out.flush();    }    @RequestMapping(value = "/b", method = RequestMethod.GET)    public void cooperation2(HttpServletRequest request, HttpServletResponse response)            throws IOException {        String filepath = "/codes";//mac codes文件夹的目录//        String filepath = "D:\file"; //windows D盘下的file文件夹的目录        File file = new File(filepath);//File类型可以是文件也可以是文件夹        NameFilter filter = new NameFilter("json");        File[] files = file.listFiles(filter);        List<File> wjList = new ArrayList<File>();//新建一个文件集合        if (files != null) {  //判断文件是否存在，如果不存在而强行输出，则会报NullPointerException空指针异常的错误            for (File afile : files) {    //for each 循环输出文件名，不了解的可以搜一下，在集合处使用很多                if (afile != null) {                    wjList.add(afile);                    getJson(afile.getPath());                    System.out.println(afile.getName());                }            }        }        for (File bfile : wjList) {            getJson(bfile.getPath());            cooperation(request, response, bfile.getName(),bfile.getPath());        }    }    private static String replaceMap(String text) {        String replaceEach = StringUtils.replaceEach(text,                new String[]                        {                                "&#xe5f7;", "&#xe60d;", "&#xe616;",                                "&#xeb31;", "&#xe60d;", "&#xe616;",                                "&#xefda;", "&#xe60d;", "&#xe616;",                                "&#xee9b;", "&#xe60d;", "&#xe616;",                                "&#xf1b1;", "&#xe60d;", "&#xe616;",                                "&#xf026;", "&#xe60d;", "&#xe616;",                                "&#xe138;", "&#xe60d;", "&#xe616;",                                "&#xe8e1;", "&#xe60d;", "&#xe616;",                                "&#xea36;", "&#xe60d;", "&#xe616;",                                "&#xf323;", "&#xe60d;", "&#xe616;"                        },                new String[]                        {                                "0", "0", "0",                                "1", "1", "1",                                "2", "2", "2",                                "3", "3", "3",                                "4", "4", "4",                                "5", "5", "5",                                "6", "6", "6",                                "7", "7", "7",                                "8", "8", "8",                                "9", "9", "9"                        }        );        return replaceEach;    }    private List<List<String>> getJson(String path) {        String s = ReadUtil.readJsonFile(path);        JSONObject jobj = JSON.parseObject(s);        JSONObject data = jobj.getJSONObject("data");        JSONArray shopList = data.getJSONArray("shopList");        List<List<String>> result = new ArrayList<>();        for (int i = 0; i < shopList.size(); i++) {            List<String> item = new ArrayList<>();            JSONObject key1 = (JSONObject) shopList.get(i);            String name = (String) key1.get("shopName");            item.add(name);            int wmPoiScore = (int) key1.get("wmPoiScore");            item.add(wmPoiScore + "");            String monthSalesTip = (String) key1.get("monthSalesTip");            String[] strs = monthSalesTip.split("月售");            if (strs.length > 1) {                item.add(replaceMap(strs[1]));            }else {                item.add(" ");            }            String averagePriceTip = (String) key1.get("averagePriceTip");            String[] averagePriceTips = averagePriceTip.split("人均 ¥");            if (averagePriceTips.length > 1) {                item.add(replaceMap(averagePriceTips[1]));            }else {                item.add("");            }            String minPriceTip = (String) key1.get("minPriceTip");            String[] minPriceTips = minPriceTip.split("起送 ¥");            if (minPriceTips.length > 1) {                item.add(replaceMap(minPriceTips[1]));            }else {                item.add(" ");            }            String shippingFeeTip = (String) key1.get("shippingFeeTip");            String[] shippingFeeTips = shippingFeeTip.split("配送 ¥");            if (shippingFeeTips.length > 1) {                item.add(replaceMap(shippingFeeTips[1]));            }else {                item.add(" ");            }/*            String averagePriceTip1 = (String) key1.get("averagePriceTip");            String[] averagePriceTips1 = averagePriceTip1.split("人均 ¥");            if (averagePriceTips1.length > 1) {                String s1 = replaceMap(averagePriceTips1[1]);                int i1 = Integer.parseInt(s1);                if (i1 < 20) {                    item.add("<20");                } else if (i1 >= 20 && i1 < 30) {                    item.add("20-30");                } else if (i1 >= 30) {                    item.add(">30");                }            }else {                item.add(" ");            }*/            result.add(item);        }        return result;    }    public static void main(String[] args) {        String appid = "wx9e1325e46603763b";        String secret = "575d23eba7bbf203ba0e17b842e27931";        String token = "28_bmkGS-p7zmiST5SfkAXIcHxq81VNvJFXIErTb3en_T53arzbwJKLX800Lqtem7HO2ywX_IQTi0QHEv7zRb3jP40pPQO7XO06rwBBnhlccrlz0I6DPsTENzuGBaDQDB91EvhyZvOodrMlgZIbDDReAAAPPD";        String user_action_set_id = "1109721128";        String url = String.format("https://api.weixin.qq.com/marketing/user_action_sets/add?version=v1.0&access_token=%s", token);        JSONObject object = new JSONObject();        object.put("type", "WEB");        object.put("name", "wxadtest");        object.put("description", "test");        String body = object.toJSONString();        Map<String, String> map = new HashMap<>();        map.put("Content-Type", "application/json");        String s = HttpClientUtils.HttpPost(url, body, map);        if (StringUtils.isNotBlank(s)) {            JSONObject object1 = JSONObject.parseObject(s);            Integer errcode = object1.getInteger("errcode");            if (errcode == 0) {                String data = object1.getString("data");                JSONObject dataObject = JSONObject.parseObject(data);                user_action_set_id = dataObject.getString("user_action_set_id");                if (StringUtils.isNotBlank(user_action_set_id)) {                    System.out.println("activity setid "+ user_action_set_id);                }            }        }    }}