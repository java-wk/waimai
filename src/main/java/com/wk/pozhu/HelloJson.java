package com.wk.pozhu;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import com.wk.ReadUtil;import org.apache.commons.lang3.StringUtils;import java.io.File;import java.io.FilenameFilter;public class HelloJson {    private static String replaceMap(String text) {        String replaceEach = StringUtils.replaceEach(text,                new String[]                        {                                "&#xe5f7;", "&#xe60d;", "&#xe616;",                                "&#xeb31;", "&#xe60d;", "&#xe616;",                                "&#xefda;", "&#xe60d;", "&#xe616;",                                "&#xee9b;", "&#xe60d;", "&#xe616;",                                "&#xf1b1;", "&#xe60d;", "&#xe616;",                                "&#xf026;", "&#xe60d;", "&#xe616;",                                "&#xe138;", "&#xe60d;", "&#xe616;",                                "&#xe8e1;", "&#xe60d;", "&#xe616;",                                "&#xea36;", "&#xe60d;", "&#xe616;",                                "&#xf323;", "&#xe60d;", "&#xe616;"                        },                new String[]                        {                                "0", "0", "0",                                "1", "1", "1",                                "2", "2", "2",                                "3", "3", "3",                                "4", "4", "4",                                "5", "5", "5",                                "6", "6", "6",                                "7", "7", "7",                                "8", "8", "8",                                "9", "9", "9"                        }        );        return replaceEach;    }    public static void main(String[] args) {//        ClassLoader classLoader = HelloJson.class.getClassLoader();//        String path = classLoader.getResource("test1.json").getPath();//        System.out.println(path);//        String filepath = "C:\\Users\\putao-1\\IdeaProjects\\waimai\\src\\main\\resources\\pozhu\\买错房，错一生";//D盘下的file文件夹的目录        String filepath = "C:\\Users\\putao-1\\IdeaProjects\\waimai\\src\\main\\resources\\pozhu";        File file = new File(filepath);//File类型可以是文件也可以是文件夹//        File[] fileList = file.listFiles();//将该目录下的所有文件放置在一个File类型的数组中//        List<File> wjList = new ArrayList<File>();//新建一个文件集合        NameFilter filter = new NameFilter("json");        File[] files = file.listFiles(filter);        if(files != null) {  //判断文件是否存在，如果不存在而强行输出，则会报NullPointerException空指针异常的错误            for (File afile : files) {    //for each 循环输出文件名，不了解的可以搜一下，在集合处使用很多                if (afile != null) {                    System.out.println(afile.getPath());                    getJson(afile.getPath());                }            }        }    }    private static void getJson(String path) {        String s = ReadUtil.readJsonFile(path);        JSONObject jobj = JSON.parseObject(s);        JSONArray seo_description = jobj.getJSONArray("seo_description");        for (Object jsonObject:seo_description        ) {            JSONObject jsonObject1 = (JSONObject) jsonObject;            if ((int)jsonObject1.get("type") == 0) {                System.out.println(jsonObject1.get("value"));            }        }    }    static class NameFilter implements FilenameFilter {        //私有域扩展名        private String extent;        //接收指定的扩展名        public NameFilter(String extent) {            this.extent = extent;        }        @Override        public boolean accept(File dir, String name) {            return name.endsWith(extent);            //如果文件符合指定的扩展名则返回true，否则返回false        }    }    /*     * unicode编码转中文     */    public static String decodeUnicode(final String dataStr) {        try{            final StringBuffer buffer = new StringBuffer(dataStr==null?"":dataStr);            if(StringUtils.isNotBlank(dataStr) && dataStr.contains("\\u")) {                buffer.delete(0,buffer.length());                int start = 0;                int end = 0;                while (start > -1) {                    end = dataStr.indexOf("\\u", start + 2);                    String a="";//如果夹着非unicode编码的字符串，存放在这                    String charStr = "";                    if (end == -1) {                        if(dataStr.substring(start + 2).length()>4){                            charStr = dataStr.substring(start + 2, start + 6);                            a = dataStr.substring(start + 6)  ;                        }else{                            charStr = dataStr.substring(start + 2);                        }                    } else {                        charStr = dataStr.substring(start + 2, end);                    }                    char letter = (char) Integer.parseInt(charStr.trim(), 16); // 16进制parse整形字符串。                    buffer.append(letter);                    if(StringUtils.isNotBlank(a)){                        buffer.append(a);                    }                    start = end;                }            }            return buffer.toString();        } catch (Exception e){            e.printStackTrace();        }        return dataStr;    }}